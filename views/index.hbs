<div class="content">
  <div id="main" class="mdc-typography--body1" style="display: none;">
    <h1 class="mdc-typography--headline2">Loopback OAuth2.0 Server</h1>

    <p>
      <!-- Welcome message -->
      Welcome to OAuth 2.0. Try one of the grant types below. For more information, see the
      <a href="https://github.com/FrankHassanabad/Oauth2orizeRecipes/wiki">wiki site</a>.<br>

      <!-- Authorization Code grant -->
    </p>
    <h2 class="mdc-typography--headline4"><a href="http://tools.ietf.org/html/rfc6749#section-4.1">Authorization
        Code</a><br></h2>
    The authorization code grant type is used to obtain both access tokens and refresh tokens and is optimized for
    confidential clients. Click the link below to begin the grant type.<br><br>
    <a id="authcode"
      href="/oauth/authorize?redirect_uri=/oauth&amp;response_type=code&amp;client_id=abc123&amp;scope=offline_access">
      <pre>  <span class="hostname">http://{{host}}</span>/oauth/authorize?
  redirect_uri=<span class="hostname">http://{{host}}/oauth</span>&amp;
  response_type=code&amp;
  client_id=abc123&amp;
  scope=offline_access
                </pre>
    </a>

    <!-- Implicit grant -->
    <p>
    </p>
    <h2 class="mdc-typography--headline4"><a href="http://tools.ietf.org/html/rfc6749#section-4.2">Implicit</a><br></h2>
    The implicit grant type is used to obtain access tokens (it does not support the issuance of refresh tokens) and
    is optimized for public clients known to operate a particular redirection URI. Click the link below to begin
    the grant type.<br><br>
    <a id="implicit" href="/oauth/authorize?redirect_uri=/oauth&amp;response_type=token&amp;client_id=abc123">
      <pre>  <span class="hostname">http://{{host}}</span>/oauth/authorize?
  redirect_uri=<span class="hostname">http://{{host}}/oauth</span>&amp;
  response_type=token&amp;
  client_id=abc123
            </pre>
    </a>

    <!-- Resource Owner grant -->
    <div id="resourceOwner">
      <p>
      </p>
      <h2 class="mdc-typography--headline4"><a href="http://tools.ietf.org/html/rfc6749#section-4.3">Resource Owner
          Password Credentials</a><br></h2>
      The resource owner password credentials grant type is suitable in cases where the resource owner has a trust
      relationship with the client, such as the device operating system or a highly privileged application. Open your
      browser's debug tools, and click the Submit Post button below to begin the grant type.<br><br>
      <pre>  POST oauth/token HTTP/1.1
  Host: <span class="hostname">http://{{host}}</span>
  Content-Type: application/x-www-form-urlencoded
  Authorization: Basic YWJjMTIzOnNzaC1zZWNyZXQ=

  grant_type=password&amp;
  username=bob&amp;
  password=secret&amp;
  scope=offline_access
                </pre>
      <p>
        <button id="resourceOwnerSubmitPostButton" class="mdc-button mdc-button--raised" type="button">Submit
          Post</button>
      </p>
    </div>
    <br>

    <!-- Client credentials grant -->
    <div id="clientCredentials">
      <p>
      </p>
      <h2 class="mdc-typography--headline4"><a href="http://tools.ietf.org/html/rfc6749#section-4.4">Client
          Credentials</a><br></h2>
      The client can request an access token using only its client credentials (or other supported means of
      authentication)
      when the client is requesting access to the protected resources under its control, or those of another resource
      owner that have been previously arranged with the authorization server. Open your browser's debug tools, and click
      the Submit Post button below to begin the grant type.<br><br>
      <pre>  POST oauth/token HTTP/1.1
  Host: <span class="hostname">http://{{host}}</span>
  Content-Type: application/x-www-form-urlencoded
  Authorization: Basic YWJjMTIzOnNzaC1zZWNyZXQ=

  grant_type=client_credentials
            </pre>
      <p>
        <button id="clientSubmitPostButton" class="mdc-button mdc-button--raised" type="button">Submit Post</button>
      </p>
    </div>
  </div>
  <div id="implicitDiv" class="mdc-typography--body1" style="display: none;">
    <h1 class="mdc-typography--headline2">
      Access Token
    </h1>
    <p>
      In your URL you will see the following access_token fragment which has your
      your access token, expiration, and token type
    </p>
    <pre><span class="code" id="accessTokenResult"></span>

<span id="expirationResult"></span>

<span id="tokenTypeResult"></span></pre>
    <p>
      You can use your access token to call an endpoint such as a user info endpoint.
      To do this, set the Authorization Bearer to have your access token. Open your browser's debug tools,
      press the Call API EndPoint button and look at your network tab.
    </p>
    <pre>GET /api/userinfo HTTP/1.1
Host: <span class="hostname">http://{{host}}</span>
Authorization: Bearer <span class="access_token code"></span>
        </pre>
    <button id="apiEndPointButton" class="mdc-button mdc-button--raised" type="button">Call API EndPoint</button>
  </div>
  <div id="userInformation" class="mdc-typography--body1" style="display: none;">
    <h1 class="mdc-typography--headline2">
      User Information
    </h1>
    <p>
      Underneath your brower's network tab you will see the following JSON response from a successful API endpoint call.
    </p>
    <pre><span id="userJsonInfo" class="code"></span></pre>
  </div>
  <div id="accessToken" class="mdc-typography--body1" style="display: none;">
    <h1 class="mdc-typography--headline2">
      Access Token
    </h1>
    <p>
      Underneath your browser's network tab you will see the following response
      with your access token, refresh token, expiration time, and token type
    </p>
    <pre><span id="fullResult" class="code"></span></pre>
    <p>
      You can use your access token to call an endpoint such as a user info endpoint.
      To do this, set the Authorization Bearer to have your access token. Press the
      Call API EndPoint button and look at your network tab.
    </p>
    <pre>GET /api/userinfo HTTP/1.1
Host: <span class="hostname">http://{{host}}</span>
Authorization: Bearer <span class="access_token code"></span>
        </pre>
    <button id="accessTokenCallApiButton" class="mdc-button mdc-button--raised" type="button">Call API
      EndPoint</button>
  </div>
</div>

<script>
  $(document).ready(function () {
    const fragment = window.location.hash;

    if (!fragment) {
      $('#main').show();
    } else {
      $("#implicitDiv").show();
      $("#accessTokenResult").text(fragment.substring(fragment.indexOf("access_token="), fragment.indexOf("&")));
      $("#expirationResult").text(fragment.substring(fragment.indexOf("expires_in="), fragment.indexOf("&token_type=")));
      $("#tokenTypeResult").text(fragment.substring(fragment.indexOf("token_type=")));
      $(".access_token").text(fragment.substring((fragment.indexOf("access_token=") + "access_token".length + 1), fragment.indexOf("&")));
    }

    $("#apiEndPointButton").click(function (event) {
      //They clicked on the api end point button, so hide the implicit work flow and
      //make the ajax call to get the user information using the fragment from the URL
      $.ajax({
        type: 'GET',
        dataType: 'json',
        url: '/api/userinfo',
        headers: {
          "Authorization": "Bearer " + fragment.substring(14, fragment.indexOf("&"))
        },
        success: function (result) {
          $("#implicitDiv").hide();
          $("#userInformation").show();
          $("#userJsonInfo").text(JSON.stringify(result, undefined, 4));
        }
      });
    });

    $("#resourceOwnerSubmitPostButton").click(function (event) {
      $.ajax({
        type: 'POST',
        dataType: 'json',
        url: "/oauth/token",
        headers: {
          //This is abc123:ssh-secret base 64 encoded
          "Authorization": `Basic ${btoa('abc123:ssh-secret')}`
        },
        data: 'grant_type=password&username=bob&password=secret&scope=offline_access',
        success: function (result) {
          $("#main").hide();
          $(".access_token").text(result.access_token);
          $("#accessToken").show();
          $("#fullResult").append(JSON.stringify(result, undefined, 4));

          $("#accessTokenCallApiButton").click(function (event) {
            $.ajax({
              type: 'GET',
              dataType: 'json',
              url: '/api/userinfo',
              headers: {
                "Authorization": "Bearer " + result.access_token
              },
              success: function (result) {
                $("#accessToken").hide();
                $("#userInformation").show();
                $("#userJsonInfo").text(JSON.stringify(result, undefined, 4));
              }
            })
          });
        }
      })
    });

    $("#clientSubmitPostButton").click(function (event) {
      $.ajax({
        type: 'POST',
        dataType: 'json',
        url: "/oauth/token",
        headers: {
          //This is abc123:ssh-secret base 64 encoded
          "Authorization": `Basic ${btoa('abc123:ssh-secret')}`
        },
        data: 'grant_type=client_credentials',
        success: function (result) {
          $("#main").hide();
          $(".access_token").text(result.access_token);
          $("#accessToken").show();
          $("#fullResult").append(JSON.stringify(result, undefined, 4));

          $("#accessTokenCallApiButton").click(function (event) {
            $.ajax({
              type: 'GET',
              dataType: 'json',
              url: '/api/userinfo',
              headers: {
                "Authorization": "Bearer " + result.access_token
              },
              success: function (result) {
                $("#accessToken").hide();
                $("#userInformation").show();
                $("#userJsonInfo").text(JSON.stringify(result, undefined, 4));
              }
            })
          });
        }
      })
    });
  });
</script>
